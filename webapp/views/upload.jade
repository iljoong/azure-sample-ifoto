extends layout

block content

    h2 #{title}

    h3 upload photos to blob

    if (readonly)
        p Upload is disabled in this site

    else

        div
            span.btn.btn-default.btn-file
                input(type="file" id="files" name="files[]" multiple="multiple")
            p The photos will be uploaded into Azure Storage
            p Note that maximum size of uploading image is 4 MB
            p Photo won't show immediately after upload. It will takes about a minitue to complete the process of thumbnailing and captioning
        div(id="msgstatus")

        script.
            function getFilename(url) {
                if (url === null) {
                    return "";
                }
                var index = url.lastIndexOf("/");
                if (index !== -1) {
                    url = url.substring(index + 1); // Keep path without its segments
                }
                index = url.indexOf("?");
                if (index !== -1) {
                    url = url.substring(0, index); // Remove query
                }

                return index !== -1
                    ? url
                    : ""; // No extension found
            };
            function renderImage(ajaxRequest, blobSasUri) {
                if (ajaxRequest.readyState == 4) { // xmlhttp.status==200 == successful request
                    //var $image = $('<img src="' + blobSasUri + '" alt="" />');
                    //$("#uploadedImage").prepend($image);
                    $("#msgstatus").prepend("<br>uploaded: " + blobSasUri);
                    //alert(getFilename(blobSasUri));

                    $.post("/addqueue",
                        { filename: getFilename(blobSasUri) },
                        function (data, status) {
                            alert("Upload success and added queue: " + data);
                        }).fail(function(data) {
                            alert("Error: " + data.responseText);
                        });
                }
            }

            // Method uploads a blob to Azure Storage by using a Blob SAS URL.
            // The Web Browser will add the necessary CORS headers and issue a preflight request if needed.
            // blobSasUrl: Blob SAS URL already obtained through an Ajax call to own server side.
            // fileDataAsArrayBuffer: an ArrayBuffer (Byte Array) containing the raw data of the file to be uploaded
            function uploadImage(blobSasUrl, fileDataAsArrayBuffer) {
                
                $("#msgstatus").prepend("<br>start uploading");

                var ajaxRequest = new XMLHttpRequest();

                ajaxRequest.onreadystatechange = function() {return renderImage(ajaxRequest, blobSasUrl)};

                try {
                    // Performing an PutBlob (BlockBlob) against storage
                    ajaxRequest.open('PUT', blobSasUrl, true);
                    ajaxRequest.setRequestHeader('Content-Type', 'image/jpeg');
                    ajaxRequest.setRequestHeader('x-ms-blob-type', 'BlockBlob');
                    ajaxRequest.send(fileDataAsArrayBuffer);
                }
                catch (e) {
                    alert("can't upload the file to server.\n" + e.toString());
                }
            }

            // This Method is called after users selects the images for upload.
            // It loops over all selected files and uploads them one by one into Azure Storage.
            function handleFileSelect(evt) {
                var files = evt.target.files; // FileList object
                var ts;
                if (!Date.now) {
                    Date.now = function() { return new Date().getTime(); }
                }

                // Loop through the FileList, save them and render image files as thumbnails.
                for (var i = 0, file; file = files[i]; i++) {

                    ts = Date.now() / 1000 | 0;

                    // Create a reader that would read the entire file data as ArrayBuffer
                    var reader = new FileReader();

                    // AJAX URL that would be used to request an Azure Blob SAS URL
                    file.azureUri = "/sasurl" + "?blobName=" + file.name + "&containerName=images&ts=" + ts;

                    reader.onloadend = (function (theFile) {
                        return function (e) {
                            // Once the reader is done reading the file bytes
                            // We will issue an AJAX call against our service to get the SAS URL
                            $.ajax({
                                type: 'GET',
                                url: theFile.azureUri,
                                success: function (res, status, xhr) {
                                    // Called into GetBlobSasUrl to generate the SAS for the required blob
                                    blobSasUrl = xhr.responseText;
                                    // Now we have the right SAS url that we will use to upload the image
                                    // Pass in the SAS URL and the ArrayBuffer to be uploaded
                                    uploadImage(blobSasUrl, e.target.result);
                                },
                                error: function (res, status, xhr) {
                                    alert("can't get sas from the server");
                                }
                            });
                        };
                    })(file);

                    // Read in the image file as a data URL, once done the reader.onloadend event is raised
                    reader.readAsArrayBuffer(file);
                }
            }

            document.getElementById('files').addEventListener('change', handleFileSelect, false);